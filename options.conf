[package]
name = grpc
url = https://github.com/grpc/grpc/archive/v1.51.1/grpc-1.51.1.tar.gz
archives = https://github.com/google/benchmark/archive/090faecb454fbd6e6e17a75ef8146acb037118d4.tar.gz third_party/benchmark https://github.com/c-ares/c-ares/archive/e982924acee7f7313b4baa4ee5ec000c5e373c30.tar.gz third_party/cares/cares https://github.com/gflags/gflags/archive/28f50e0fed19872e0fd50dd23ce2ee8cd759338e.tar.gz third_party/gflags https://github.com/protocolbuffers/protobuf/archive/09745575a923640154bcf307fba8aedff47f240a.tar.gz third_party/protobuf https://github.com/google/boringssl/archive/b29b21a81b32ec273f118f589f46d56ad3332420.tar.gz third_party/boringssl https://github.com/madler/zlib/archive/cacf7f1d4e3d44d871b605da3b647f07d718623f.tar.gz third_party/zlib https://github.com/protocolbuffers/upb/archive/931bbecbd3230ae7f22efa5d203639facc47f719.tar.gz third_party/upb
giturl = https://github.com/grpc/grpc.git
domain = 
alias = 

[autospec]
# build 32 bit libraries
32bit = false
# allow package to build with test failures
allow_test_failures = false
# unset %build ld_as_needed variable
asneeded = false
# this package is trusted enough to automatically update (used by other tools)
autoupdate = false
# extend flags with '-std=gnu++98
broken_c++ = false
# disable parallelization during build
broken_parallel_build = false
# this package is a library compatibility package and only ships versioned library files
compat = false
# set conservative build flags
conservative_flags = false
# dev package requires the extras to be installed
dev_requires_extras = false
# pass -ffast-math to compiler
fast-math = false
# optimize build for speed over size
funroll-loops = true
# set flags to smallest -02 flags possible
insecure_build = false
# do not remove static libraries
keepstatic = false
# do not require autostart subpackage
no_autostart = false
# do not use the replacement pattern for file matching
no_glob = false
# do not generate debuginfo for this package
nodebug = false
# disable stripping binaries
nostrip = false
# configure build also for openmpi
openmpi = false
# optimize build for size over speed
optimize_size = false
# set profile for pgo
pgo = false
# set flags for security-sensitive builds
security_sensitive = false
# package is only used by servers
server = false
# do not run test suite
skip_tests = false
# add .so files to the lib package instead of dev
so_to_lib = false
# configure build for avx2
use_avx2 = true
# configure build for avx512
use_avx512 = false
# add clang flags
use_clang = false
# configure build for lto
use_lto = false
# require package verification for build
verify_required = false

